#include <iostream>
using namespace std;

struct info {
    int id;
    char name[50];
    char department[50];
    int stage;
    int age;
};

const int SIZE = 100;
info students[SIZE];
int total = 0;
int id_counter = 1000;

void addStudent() {
    if (total >= SIZE) {
        cout << "Database is full.\n";
        return;
    }

    students[total].id = id_counter++;

    cout << "Enter student name: ";
    cin >> students[total].name;

    cout << "Enter department: ";
    cin >> students[total].department;

    cout << "Enter stage: ";
    cin >> students[total].stage;

    cout << "Enter age: ";
    cin >> students[total].age;

    cout << "Student added with ID: " << students[total].id << "\n";

    total++;
}

void showStudents() {
    bool found = false;
    for (int i = 0; i < total; i++) {
        if (students[i].id != -1) {
            found = true;
            cout << "\nID: " << students[i].id << endl;
            cout << "Name: " << students[i].name << endl;
            cout << "Department: " << students[i].department << endl;
            cout << "Stage: " << students[i].stage << endl;
            cout << "Age: " << students[i].age << endl;
        }
    }
    if (!found) {
        cout << "No students to show.\n";
    }
}

void editStudent() {
    int id;
    cout << "Enter student ID to edit: ";
    cin >> id;

    for (int i = 0; i < total; i++) {
        if (students[i].id == id) {
            cout << "Editing student: " << students[i].name << endl;
            cout << "Enter new name: ";
            cin >> students[i].name;
            cout << "Enter new department: ";
            cin >> students[i].department;
            cout << "Enter new stage: ";
            cin >> students[i].stage;
            cout << "Enter new age: ";
            cin >> students[i].age;
            cout << "Student updated.\n";
            return;
        }
    }

    cout << "Student not found.\n";
}

void deleteStudent() {
    int id;
    cout << "Enter student ID to delete: ";
    cin >> id;

    for (int i = 0; i < total; i++) {
        if (students[i].id == id) {
            students[i].id = -1; 
            cout << "Student deleted.\n";
            return;
        }
    }

    cout << "Student not found.\n";
}

void searchStudent() {
    int id;
    cout << "Enter student ID to search: ";
    cin >> id;

    for (int i = 0; i < total; i++) {
        if (students[i].id == id) {
            cout << "\nID: " << students[i].id << endl;
            cout << "Name: " << students[i].name << endl;
            cout << "Department: " << students[i].department << endl;
            cout << "Stage: " << students[i].stage << endl;
            cout << "Age: " << students[i].age << endl;
            return;
        }
    }

    cout << "Student not found.\n";
}

int main() {
    int choice;

    while (true) {
        cout << "\n--- Student Management Menu ---\n";
        cout << "1. Add Student\n";
        cout << "2. Show All Students\n";
        cout << "3. Edit Student\n";
        cout << "4. Delete Student\n";
        cout << "5. Search Student\n";
        cout << "6. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: addStudent(); break;
            case 2: showStudents(); break;
            case 3: editStudent(); break;
            case 4: deleteStudent(); break;
            case 5: searchStudent(); break;
            case 6: cout << "Goodbye!\n"; return 0;
            default: cout << "Invalid choice. Try again.\n";
        }
    }

    return 0;
}
